/*
 * 
 * Fast Universal Simulation Engine (FUSE)
 *
 * Copyright 2014 Jeff Ridder.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.ridderware.fuse.gui;

import com.ridderware.fuse.Double2D;
import java.awt.Shape;
import java.awt.event.MouseEvent;

/**
 * If you want to create custom code that reacts to a MouseEvent over the 
 * canvas area (the area actually being painted on), implement the Clickable 
 * interface in your agent. All clicks on the canvas will be forwarded to your
 * agent with the mouseClick(...) method.
 *
 * @author Jason C. HandUber
 * @see com.ridderware.fuse.gui.SimpleView.GeoPanel
 * @see com.ridderware.fuse.gui.ViewFrame#defaultMouseClicked 
 */
public interface Clickable
{
    /**
     * If shape == null, then click was not on a registered Shape. (ie. the
     * click did not take place over a Shape that was returned in by a 
     * paintClickable() implementation).
     *
     * @param evt    The MouseEvent generated by the click.
     * @param click  location of click in simulation space.
     * @param shape  The actual bounding shape, in window space, of the 
     *               object that was clicked on.
     */
    public void mouseClick(MouseEvent evt, Double2D click, Shape shape);
}
